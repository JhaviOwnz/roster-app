████████████████████████████████████████████████████████████████████████
█  KAMANA ROSTER APP · CONTINUATION PROMPT  (ULTRA-ROBUST, SELF-LOADING) █
████████████████████████████████████████████████████████████████████████
↳  Copy-paste THIS ENTIRE BLOCK into a fresh ChatGPT window.  
↳  It is formatted for *maximum recall*, includes every file path, current state,
   architectural decisions, open TODOs, coding conventions, git workflow,
   future milestones, and meta-instructions for the assistant itself.
────────────────────────────────────────────────────────────────────────
╭─ META-INSTRUCTIONS ──────────────────────────────────────────────────╮
│ • You (ChatGPT) are resuming **one-on-one solo-dev mode**.           │
│ • Default branch is **main** (no feature branches unless explicitly  │
│   requested).                                                        │
│ • Use concise commit messages; update CHANGELOG.md per SemVer.       │
│ • When adding code, provide only the diff-ready snippets (no extra   │
│   prose inside code blocks).                                         │
│ • Language: mix of 🇪🇸 + 🇬🇧 tech jargon is acceptable. Feel free to   │
│   insert shell commands, JSON, JSX, Bash, PowerShell, pseudo-code,   │
│   ASCII diagrams, Mermaid, or SQL if it clarifies the task.          │
│ • Frontend is in React 19 (CRA) + Ant Design 5.25 + Framer Motion.   │
│ • Backend uses flat-file JSON. No DB unless migration is explicit.   │
╰──────────────────────────────────────────────────────────────────────╯

╭─ REPOSITORY ─────────────────────────────────────────────────────────╮
│ GitHub : https://github.com/JhaviOwnz/roster-app                     │
│ Branch : main                                                        │
│ Node   : 18.15.0  ·  npm: 9.6.4  ·  React: 19.x                      │
│ Script : `npm run dev` → concurrently client & server                │
╰──────────────────────────────────────────────────────────────────────╯

╭─ FILE TREE SNAPSHOT (2025-07-29) ────────────────────────────────────╮
│ server/                                                              │
│ ├─ db/                                                               │
│ │   ├─ employees.json            ← 13 empleados sample               │
│ │   ├─ shiftConfig.json          ← AM/PM + OFF/ACC/SICK…             │
│ │   ├─ rosters.json              ← roster actual (se guarda aquí)   │
│ │   └─ defaultRoster.json        ← plantilla precargada (weekStart)  │
│ ├─ routes/                                                           │
│ │   └─ rosters.js                ← GET /, POST /, GET /default       │
│ └─ index.js                      ← mounts /api/rosters & /api/shifts │
│ client/                                                              │
│ └─ src/                                                              │
│     ├─ components/                                                   │
│     │   └─ RosterPage.js         ← tag-grid con edición y export     │
│     ├─ constants/                                                   │
│     │   └─ colors.js             ← SHIFT_COLORS (pastel mejorado)   │
│     ├─ api/                                                          │
│     │   └─ employees.js          ← helper fetch empleados            │
│     └─ index.css                 ← .compact-rows (height 32px)       │
╰──────────────────────────────────────────────────────────────────────╯

╭─ DATA CONTRACTS ─────────────────────────────────────────────────────╮
│ shiftConfig.json  : [{id,name,times:[hh:mm-hh:mm]}]                  │
│ employees.json     : [{id,name}]                                     │
│ rosters.json       : { weekStart, data: [ { name, Mon..Sun } ] }     │
│ cell model (FE)    : { shift: string, time: string }                 │
╰──────────────────────────────────────────────────────────────────────╯

╭─ COMPLETED FEATURES (v1.4.0-dev) ───────────────────────────────────╮
│ ✓ Save Roster → guarda en rosters.json                              │
│ ✓ Export to PDF (html2canvas + jsPDF) con título y sin "+"          │
│ ✓ Animación botón Save (Framer Motion)                              │
│ ✓ SHIFT_COLORS pastel balanceados (presencia + impresión)           │
│ ✓ Tag ocupa 100 % celda + `borderRadius: 6`, `fontWeight: 500`      │
│ ✓ Responsive base lista, pendiente Sidebar                          │
╰──────────────────────────────────────────────────────────────────────╯

╭─ OPEN ROADMAP (prioridad editable) ─────────────────────────────────╮
│ [A] 📅 Selector de semana (DatePicker)                              │
│     · Cambiar visualmente el weekStart                             │
│ [B] 🔁 Duplicar semana anterior                                     │
│     · "Copy Previous Week" → clona al weekStart actual             │
│ [C] 🛠 ShiftConfigPage                                              │
│     · Edición de etiquetas + colores desde UI                      │
│ [D] 🔐 Soporte para roles/usuarios                                  │
│     · viewer vs admin                                               │
│ [E] 📤 Export CSV mensual                                           │
│     · Exportador para payroll u horas                              │
│ [F] 🧠 State refactor → Context o Zustand (si filtros llegan)       │
╰──────────────────────────────────────────────────────────────────────╯

╭─ CODING CONVENTIONS ────────────────────────────────────────────────╮
│ • Commit prefix: feat / fix / chore / refactor / docs.               │
│ • CHANGELOG: Added / Changed / Fixed / Removed.                      │
│ • Git: `main` única, sin ramas feature por defecto.                  │
│ • Prefer ES2024+, Ant Design v5.25+, React 19, json backend.         │
│ • Estilo visual: bordes redondeados, sombras suaves, color pastel   │
│ • Animaciones: Framer Motion con `whileTap` / `animate`             │
╰──────────────────────────────────────────────────────────────────────╯

╭─ NEXT-STEP TEMPLATE (sample) ───────────────────────────────────────╮
│ **User**: “Agreguemos el selector visual de semana.”                │
│ **Assistant**:                                                      │
│ 1. `DatePicker` con `onChange → setWeekStart()`                     │
│ 2. Actualizar weekStart en save/export                              │
│ 3. Estilo consistente con botones                                   │
│ 4. Commit + push                                                    │
╰──────────────────────────────────────────────────────────────────────╯

╭─ MACHINE-READABLE SUMMARY ─────────────────────────────────────────╮
│ JSON:                                                               │
│ { "repo":"roster-app", "branch":"main",                            │
│   "stack":{"frontend":"React+AntD+Framer","backend":"Express"},    │
│   "storage":"JSON flat-file",                                      │
│   "features":["save","pdf export","color","motion","grid-edit"],   │
│   "next":["date selector","copy week","auth"] }                    │
╰──────────────────────────────────────────────────────────────────────╯
████████████████████████████████████████████████████████████████████████
